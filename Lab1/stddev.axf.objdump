
C:/Users/James Tang/Desktop/ARM/Lab1/stddev.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
	.text
			.global _start

_start:
			// R4 holds result
			LDR R4, =RESULTMAX
   0:	e59f4098 	ldr	r4, [pc, #152]	; a0 <NUMBERS+0x1c>
			
			// R2 holds counter for loop to find max
			LDR R2, [R4, #4]
   4:	e5942004 	ldr	r2, [r4, #4]
			// R3 stores the numbers
			ADD R3, R4, #8
   8:	e2843008 	add	r3, r4, #8
			// putting numbers stored in R3 to RO
			LDR R0, [R3]
   c:	e5930000 	ldr	r0, [r3]

00000010 <LOOPMAX>:

LOOPMAX:		// Counter decrement
			SUBS R2, R2, #1
  10:	e2522001 	subs	r2, r2, #1
			// if counter is zero
			BEQ DONEMAX
  14:	0a000005 	beq	30 <DONEMAX>
			// else go to next number
			ADD R3, R3, #4
  18:	e2833004 	add	r3, r3, #4
			LDR R1, [R3]
  1c:	e5931000 	ldr	r1, [r3]
			CMP R0, R1
  20:	e1500001 	cmp	r0, r1
			BGE LOOPMAX
  24:	aafffff9 	bge	10 <LOOPMAX>
			MOV R0, R1
  28:	e1a00001 	mov	r0, r1
			B LOOPMAX
  2c:	eafffff7 	b	10 <LOOPMAX>

00000030 <DONEMAX>:
			
DONEMAX:	STR R0, [R4]
  30:	e5840000 	str	r0, [r4]

00000034 <STARTMIN>:

STARTMIN:	LDR R5, =RESULTMIN
  34:	e59f5068 	ldr	r5, [pc, #104]	; a4 <NUMBERS+0x20>
			// load N into R2
			LDR R2, [R5, #8]
  38:	e5952008 	ldr	r2, [r5, #8]
			ADD R3, R5, #12
  3c:	e285300c 	add	r3, r5, #12
			LDR R6, [R3]
  40:	e5936000 	ldr	r6, [r3]

00000044 <LOOPMIN>:

LOOPMIN:	// Counter decrement
			SUBS R2, R2, #1
  44:	e2522001 	subs	r2, r2, #1
			// if counter is zero
			BEQ DONEMIN
  48:	0a000005 	beq	64 <DONEMIN>
			// else go to next number
			ADD R3, R3, #4
  4c:	e2833004 	add	r3, r3, #4
			LDR R1, [R3]
  50:	e5931000 	ldr	r1, [r3]
			CMP R6, R1
  54:	e1560001 	cmp	r6, r1
			BLE LOOPMIN
  58:	dafffff9 	ble	44 <LOOPMIN>
			MOV R6, R1
  5c:	e1a06001 	mov	r6, r1
			B LOOPMIN
  60:	eafffff7 	b	44 <LOOPMIN>

00000064 <DONEMIN>:

DONEMIN:	STR R6, [R5]
  64:	e5856000 	str	r6, [r5]
			B STD
  68:	eaffffff 	b	6c <STD>

0000006c <STD>:

STD:		SUB R0, R0,R6
  6c:	e0400006 	sub	r0, r0, r6
	//		LDR R0, [R0], #2
			LSR R0, R0, #2
  70:	e1a00120 	lsr	r0, r0, #2

00000074 <END>:

END:		B END 
  74:	eafffffe 	b	74 <END>

00000078 <RESULTMIN>:
  78:	00000000 	.word	0x00000000

0000007c <RESULTMAX>:
  7c:	00000000 	.word	0x00000000

00000080 <N>:
  80:	00000007 	.word	0x00000007

00000084 <NUMBERS>:
  84:	00000004 	.word	0x00000004
  88:	00000005 	.word	0x00000005
  8c:	00000003 	.word	0x00000003
  90:	00000006 	.word	0x00000006
  94:	00000001 	.word	0x00000001
  98:	0000000d 	.word	0x0000000d
  9c:	00000002 	.word	0x00000002
  a0:	0000007c 	.word	0x0000007c
  a4:	00000078 	.word	0x00000078
